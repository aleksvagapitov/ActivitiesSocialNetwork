{"version":3,"sources":["app/api/agent.ts","app/common/util/util.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/profileStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","features/activities/dashboard/ActivityListItemAttendees.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/TextInput.tsx","app/common/form/ErrorMessage.tsx","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/home/HomePage.tsx","app/models/activity.ts","app/common/form/TextAreaInput.tsx","app/common/form/SelectInput.tsx","app/common/form/DateInput.tsx","app/common/options/categoryOptions.ts","features/activities/form/ActivityForm.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/layout/NotFound.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileHeader.tsx","app/common/photoUpload/PhotoWidgetDropzone.tsx","app/common/photoUpload/PhotoWidgetCropper.tsx","app/common/photoUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileDescription.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","serviceWorker.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","toast","status","data","history","push","includes","removeItem","info","method","errors","hasOwnProperty","console","log","responseBody","requests","url","get","then","body","post","put","delete","file","formData","FormData","append","list","params","details","id","create","activity","update","attend","unattend","current","login","user","register","username","updateProfile","profile","uploadPhoto","photo","setMainPhoto","deletePhoto","follow","unfollow","listFollowings","predicate","listActivities","setActivityProps","date","Date","isGoing","attendees","some","a","isHost","createAttendee","displayName","image","ActivityStore","observable","ref","rootStore","getActivity","activityRegistry","this","reaction","keys","page","clear","loadActivities","activities","sortedActivities","sort","b","getTime","Object","entries","reduce","toISOString","split","URLSearchParams","String","forEach","value","key","Math","ceil","activityCount","groupActivitiesByDate","Array","from","values","Map","action","set","computed","activityId","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","commonStore","configureLogging","LogLevel","Information","build","start","state","invoke","catch","on","comment","runInAction","comments","stop","err","loadingInitial","agent","axiosParams","activitiesEnvelope","userStore","toJS","submitting","attendee","event","target","currentTarget","name","loading","filter","UserStore","setToken","modalStore","closeModal","CommonStore","setItem","appLoaded","ModalStore","shallow","open","content","modal","ProfileStore","activeTab","loadFollowings","followings","loadingActivities","userActivities","activeIndex","loadingProfile","uploadingPhoto","photos","isMain","find","following","followersCount","profiles","configure","enforceActions","RootStoreContext","createContext","activityStore","profileStore","observer","useContext","logout","Menu","fixed","inverted","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","styles","borderColor","borderWidth","ActivityListItemAttendees","List","horizontal","map","Popup","trigger","size","circular","bordered","ActivityListItem","host","x","Segment","Group","marginBottom","Content","Header","title","Description","Label","basic","color","Icon","format","venue","city","secondary","clearing","description","floated","activitiesByDate","group","divided","setPredicate","vertical","width","marginTop","attached","active","has","onChange","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","setPage","totalPages","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","hasMore","initialLoad","Loader","TextInput","input","type","placeholder","meta","touched","Form","Field","ErrorMessage","Message","statusText","length","flat","i","validate","combineValidators","email","isRequired","password","LoginForm","onSubmit","FORM_ERROR","render","handleSubmit","submitError","invalid","pristine","dirtySinceLastSubmit","textAlign","component","RegisterForm","HomePage","isLoggedIn","openModal","className","ActivityFormValues","init","category","time","assign","TextAreaInput","rows","SelectInput","options","Select","e","DateInput","rest","onBlur","onKeyDown","preventDefault","composeValidators","hasLengthGreaterThan","match","createActivity","editActivity","loadActivity","setActivity","setLoading","finally","initialValues","dateAndTime","dateString","timeString","combineDateAndTime","newActivity","uuid","widths","LoadingComponent","Dimmer","activityImageStyle","activityImageTextStyle","bottom","left","height","cancelAttendance","attendActivity","padding","ActivityDetailedInfo","verticalAlign","createHubConnection","stopHubConnection","addComment","border","Comment","Avatar","Author","Metadata","formatDistance","createdAt","Text","form","reset","labelPosition","primary","relaxed","ribbon","Extra","NotFound","Inline","Modal","onClose","isCurrentUser","Statistic","label","followingCount","Divider","Reveal","animated","visible","hidden","dropzoneStyles","borderRadius","paddingTop","dropzoneActive","PhotoWidgetDropzone","setFiles","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","aspectRatio","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","getCroppedCanvas","toBlob","blob","files","revokeObjectURL","sub","overflow","addPhotoMode","setAddPhotoMode","setTarget","deleteTarget","setDeleteTarget","Tab","Pane","paddingBottom","Card","itemsPerRow","negative","biography","editMode","setEditMode","ProfileCard","extra","ProfileFollowings","panes","menuItem","pane","loadUserActivities","menu","onTabChange","handleTabChange","objectFit","Meta","ProfileActivities","ProfileContent","setActiveTab","menuPosition","loadProfile","Component","props","withRouter","location","setAppLoaded","getUser","path","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","Boolean","hostname","children","pathname","scrollTo","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbd4227c.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { IActivity, IActivitiesEnvelope } from \"../models/activity\";\nimport { history } from \"../..\";\nimport { toast } from \"react-toastify\";\nimport { IUserFormValues, IUser } from \"../models/user\";\nimport { IProfile, IPhoto } from \"../models/profile\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = window.localStorage.getItem(\"jwt\");\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(undefined, (error) => {\n  if (error.message === \"Network Error\" && !error.response) {\n    toast.error(\"Network error - make sure API is running!\");\n  }\n  const { status, data, config, headers } = error.response;\n\n  if (status === 404) {\n    history.push(\"/notfound\");\n  }\n  if (\n    status === 401 &&\n    headers[\"www-authenticate\"].includes(\n      'Bearer error=\"invalid_token\", error_description=\"The token expired at'\n    )\n  ) {\n    window.localStorage.removeItem(\"jwt\");\n    history.push(\"/\");\n    toast.info(\"Your session has expired, please log in again\");\n  }\n  if (\n    status === 400 &&\n    config.method === \"get\" &&\n    data.errors.hasOwnProperty(\"id\")\n  ) {\n    history.push(\"/notfound\");\n  }\n  if (status === 500) {\n    toast.error(\"Server error - check the terminal for more info!\");\n  }\n  console.log(error.response);\n  throw error.response;\n});\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\nconst requests = {\n  get: (url: string) => axios.get(url).then(responseBody),\n  post: (url: string, body: {}) =>\n    axios.post(url, body).then(responseBody),\n  put: (url: string, body: {}) =>\n    axios.put(url, body).then(responseBody),\n  del: (url: string) => axios.delete(url).then(responseBody),\n  postForm: (url: string, file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios\n      .post(url, formData, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      })\n      .then(responseBody);\n  },\n};\n\nconst Activities = {\n  list: (params: URLSearchParams): Promise<IActivitiesEnvelope> =>\n    axios\n      .get(\"/activities\", { params: params })\n      .then(responseBody),\n  details: (id: string) => requests.get(`/activities/${id}`),\n  create: (activity: IActivity) => requests.post(\"/activities\", activity),\n  update: (activity: IActivity) =>\n    requests.put(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del(`/activities/${id}`),\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`),\n};\n\nconst User = {\n  current: (): Promise<IUser> => requests.get(\"/user\"),\n  login: (user: IUserFormValues): Promise<IUser> =>\n    requests.post(\"/user/login\", user),\n  register: (user: IUserFormValues): Promise<IUser> =>\n    requests.post(\"/user/register\", user),\n};\n\nconst Profiles = {\n  get: (username: string): Promise<IProfile> =>\n    requests.get(`/profiles/${username}`),\n  updateProfile: (profile: Partial<IProfile>) =>\n    requests.put(`/profiles`, profile),\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\n    requests.postForm(`/photos`, photo),\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  follow: (username: string) =>\n    requests.post(`/profiles/${username}/follow`, {}),\n  unfollow: (username: string) => requests.del(`/profiles/${username}/follow`),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get(`/profiles/${username}/follow?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get(`/profiles/${username}/activities?predicate=${predicate}`),\n};\n\nexport default {\n  Activities,\n  User,\n  Profiles,\n};\n","import { IActivity, IAttendee } from \"../../models/activity\";\nimport { IUser } from \"../../models/user\";\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n    const dateString = date.toISOString().split('T')[0];\n    const timeString = time.toISOString().split('T')[1];\n\n    return new Date(dateString + 'T' + timeString);\n}\n\nexport const setActivityProps = (activity: IActivity, user: IUser) => {\n    activity.date = new Date(activity.date);\n    activity.isGoing = activity.attendees.some(\n      a => a.username === user.username\n    )\n    activity.isHost = activity.attendees.some(\n      a => a.username === user.username && a.isHost\n    )\n    return activity;\n}\n\nexport const createAttendee = (user: IUser): IAttendee => {\n    return {\n        displayName: user.displayName,\n        isHost: false,\n        username: user.username,\n        image: user.image!\n    }\n}","import { observable, action, computed, runInAction, reaction, toJS } from \"mobx\";\nimport { SyntheticEvent } from \"react\";\nimport { IActivity } from \"../models/activity\";\nimport agent from \"../api/agent\";\nimport { history } from \"../..\";\nimport { toast } from \"react-toastify\";\nimport { RootStore } from \"./rootStore\";\nimport { setActivityProps, createAttendee } from \"../common/util/util\";\nimport {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from \"@microsoft/signalr\";\n\nconst LIMIT = 2;\n\nexport default class ActivityStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.page = 0;\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n\n  @observable activityRegistry = new Map();\n  @observable activity: IActivity | null = null;\n  @observable loadingInitial = false;\n  @observable submitting = false;\n  @observable target = \"\";\n  @observable loading = false;\n  @observable.ref hubConnection: HubConnection | null = null;\n  @observable activityCount = 0;\n  @observable page = 0;\n  @observable predicate = new Map();\n\n  @action setPredicate = (predicate: string, value: string | Date) => {\n    this.predicate.clear();\n    if (predicate !== 'all'){\n      this.predicate.set(predicate, value);\n    }\n  }\n\n  @computed get axiosParams(){\n    const params = new URLSearchParams();\n    params.append('limit', String(LIMIT));\n    params.append('offset', `${this.page ? this.page * LIMIT : 0}`);\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate'){\n        params.append(key, value.toISOString())\n      } else {\n        params.append(key, value);\n      }\n    })\n    return params;\n  }\n\n  @computed get totalPages() {\n    return Math.ceil(this.activityCount/ LIMIT);\n  }\n\n  @action setPage = (page: number) => {\n    this.page = page\n  }\n\n  @action createHubConnection = (activityId: string) => {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(process.env.REACT_APP_API_CHAT_URL!, {\n        accessTokenFactory: () => this.rootStore.commonStore.token!,\n      })\n      .configureLogging(LogLevel.Information)\n      .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log(this.hubConnection!.state))\n      .then(() => {\n        console.log(\"Attempting to join group\");\n        if (this.hubConnection!.state === \"Connected\")\n          this.hubConnection!.invoke(\"AddToGroup\", activityId);\n      })\n      .catch((error) => console.log(\"Error establishing connection: \", error));\n\n    this.hubConnection.on(\"ReceiveComment\", (comment) => {\n      runInAction(() => {\n        this.activity!.comments.push(comment);\n      });\n    });\n\n    // Method to display when user joined Chat\n    this.hubConnection.on(\"Send\", (message) => {\n      //toast.info(message);\n    });\n  };\n\n  @action stopHubConnection = () => {\n    this.hubConnection!.invoke(\"RemoveFromGroup\", this.activity!.id)\n      .then(() => {\n        this.hubConnection!.stop();\n      })\n      .then(() => console.log(\"Connection Stopped\"))\n      .catch((err) => console.log(err));\n  };\n\n  @action addComment = async (values: any) => {\n    values.activityId = this.activity!.id;\n    try {\n      await this.hubConnection!.invoke(\"SendComment\", values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  @computed get activitiesByDate() {\n    return this.groupActivitiesByDate(\n      Array.from(this.activityRegistry.values())\n    );\n  }\n\n  groupActivitiesByDate(activities: IActivity[]) {\n    const sortedActivities = activities.sort(\n      (a, b) => a.date.getTime() - b.date.getTime()\n    );\n    return Object.entries(\n      sortedActivities.reduce((activities, activity) => {\n        const date = activity.date.toISOString().split(\"T\")[0];\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: IActivity[] })\n    );\n  }\n\n  @action loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\n      const {activities, activityCount} = activitiesEnvelope;\n      runInAction(\"loading activities\", () => {\n        activities.forEach((activity) => {\n          setActivityProps(activity, this.rootStore.userStore.user!);\n          this.activityRegistry.set(activity.id, activity);\n        });\n        this.activityCount = activityCount;\n        this.loadingInitial = false;\n      });\n    } catch (error) {\n      runInAction(\"load activities error\", () => {\n        this.loadingInitial = false;\n      });\n    }\n  };\n\n  @action loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.activity = activity;\n      return toJS(activity);\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        runInAction(\"getting activity\", () => {\n          setActivityProps(activity, this.rootStore.userStore.user!);\n          this.activity = activity;\n          this.activityRegistry.set(activity.id, activity);\n          this.loadingInitial = false;\n        });\n        return activity;\n      } catch (error) {\n        runInAction(\"get activity error\", () => {\n          this.loadingInitial = false;\n        });\n        console.log(error);\n      }\n    }\n  };\n\n  @action clearActivity = () => {\n    this.activity = null;\n  };\n\n  getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  @action createActivity = async (activity: IActivity) => {\n    this.submitting = true;\n    try {\n      await agent.Activities.create(activity);\n      const attendee = createAttendee(this.rootStore.userStore.user!);\n      attendee.isHost = true;\n      let attendees = [];\n      attendees.push(attendee);\n      activity.attendees = attendees;\n      activity.isHost = true;\n      activity.comments = [];\n      runInAction(\"create activity\", () => {\n        this.activityRegistry.set(activity.id, activity);\n        this.submitting = false;\n      });\n      history.push(`/activities/${activity.id}`);\n    } catch (error) {\n      runInAction(\"create activity error\", () => {\n        this.submitting = false;\n      });\n      toast.error(\"Problem submitting data\");\n      console.log(error.response);\n    }\n  };\n\n  @action editActivity = async (activity: IActivity) => {\n    this.submitting = true;\n    try {\n      await agent.Activities.update(activity);\n      runInAction(\"editing activity\", () => {\n        this.activityRegistry.set(activity.id, activity);\n        this.activity = activity;\n        this.submitting = false;\n      });\n      history.push(`/activities/${activity.id}`);\n    } catch (error) {\n      runInAction(\"edit activity error\", () => {\n        this.submitting = false;\n      });\n      toast.error(\"Problem submitting data\");\n      console.log(error);\n    }\n  };\n\n  @action deleteActivity = async (\n    event: SyntheticEvent<HTMLButtonElement>,\n    id: string\n  ) => {\n    this.submitting = true;\n    this.target = event.currentTarget.name;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(\"deleting activity\", () => {\n        this.activityRegistry.delete(id);\n        this.submitting = false;\n        this.target = \"\";\n      });\n    } catch (error) {\n      runInAction(\"delete activity error\", () => {\n        this.submitting = false;\n        this.target = \"\";\n      });\n      console.log(error);\n    }\n  };\n\n  @action attendActivity = async () => {\n    const attendee = createAttendee(this.rootStore.userStore.user!);\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.activity!.id);\n      runInAction(() => {\n        if (this.activity) {\n          this.activity.attendees.push(attendee);\n          this.activity.isGoing = true;\n          this.activityRegistry.set(this.activity.id, this.activity);\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => {\n        this.loading = false;\n      });\n      toast.error(\"Problem signing up to the activity\");\n    }\n  };\n\n  @action cancelAttendance = () => {\n    this.loading = true;\n    try {\n      agent.Activities.unattend(this.activity!.id);\n      runInAction(() => {\n        if (this.activity) {\n          this.activity.attendees = this.activity.attendees.filter(\n            (a) => a.username !== this.rootStore.userStore.user!.username\n          );\n          this.activity.isGoing = false;\n          this.activityRegistry.set(this.activity.id, this.activity);\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => {\n        this.loading = false;\n      });\n      toast.error(\"Problem cancelling attendance\");\n    }\n  };\n}\n","import { observable, computed, action, runInAction } from \"mobx\";\nimport { IUser, IUserFormValues } from \"../models/user\";\nimport agent from \"../api/agent\";\nimport { RootStore } from \"./rootStore\";\nimport { history } from \"../..\";\n\nexport default class UserStore {\n    rootStore: RootStore;\n    constructor(rootStore: RootStore){\n        this.rootStore = rootStore;\n    }\n\n    @observable user: IUser | null = null;\n\n    @computed get isLoggedIn() {return !!this.user}\n\n    @action login = async (values: IUserFormValues) => {\n        try {\n            const user = await agent.User.login(values);\n            runInAction(() => {\n                this.user = user;\n            })\n            this.rootStore.commonStore.setToken(user.token);\n            this.rootStore.modalStore.closeModal();\n            history.push('/activities');\n        } catch (error) {\n            throw error\n        }\n    }\n\n    @action register = async (values: IUserFormValues) => {\n        try {\n            const user = await agent.User.register(values);\n            this.rootStore.commonStore.setToken(user.token);\n            this.rootStore.modalStore.closeModal();\n            history.push('/activities');\n        } catch (error) {\n            throw error\n        }\n    } \n\n    @action getUser = async () => {\n        try {\n            const user = await agent.User.current();\n            runInAction(() => {\n                this.user = user\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    @action logout = () => {\n        this.rootStore.commonStore.setToken(null);\n        this.user = null;\n        history.push('/');\n    }\n}","import { RootStore } from \"./rootStore\"\nimport { observable, action, reaction } from \"mobx\";\n\nexport default class CommonStore {\n    rootStore: RootStore;\n    constructor(rootStore: RootStore){\n        this.rootStore = rootStore;\n    }\n\n    @observable token: string | null = window.localStorage.getItem('jwt');\n    @observable appLoaded = false;\n\n    @action setToken = (token: string | null)  => {\n        window.localStorage.setItem('jwt', token!);\n        this.token = token;\n\n        reaction (\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token);\n                } else {\n                    window.localStorage.removeItem('jwt');\n                }\n            }\n        )\n    }\n\n    @action setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action } from \"mobx\";\n\nexport default class ModalStore {\n    rootStore: RootStore;\n    constructor(rootStore: RootStore){\n        this.rootStore = rootStore;\n    }\n\n    @observable.shallow modal = {\n        open: false,\n        body: null\n    }\n\n    @action openModal = (content: any) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    @action closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\nimport { IProfile, IPhoto, IUserActivity } from \"../models/profile\";\nimport agent from \"../api/agent\";\nimport { toast } from \"react-toastify\";\n\nexport default class ProfileStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n\n    reaction(() => this.activeTab,\n      activeTab => {\n        if (activeTab === 3 || activeTab === 4){\n          const predicate = activeTab === 3 ? 'followers' : 'following';\n          this.loadFollowings(predicate)\n        } else {\n          this.followings = [];\n        }\n      })\n  }\n\n  @observable profile: IProfile | null = null;\n  @observable loadingProfile = true;\n  @observable uploadingPhoto = false;\n  @observable loading = false;\n  @observable followings: IProfile[] = [];\n  @observable activeTab: number = 0;\n  @observable userActivities: IUserActivity[] = [];\n  @observable loadingActivities = false;\n\n  @computed get isCurrentUser() {\n    if (this.rootStore.userStore.user && this.profile) {\n      return this.rootStore.userStore.user.username === this.profile.username;\n    } else {\n      return false;\n    }\n  }\n\n  @action loadUserActivities = async (username: string, predicate?: string) =>  {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(username, predicate!);\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      toast.error('Problem loading activities')\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n\n  @action setActiveTab = (activeIndex: number) => {\n    this.activeTab = activeIndex;\n  }\n\n  @action loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      runInAction(() => {\n        this.loadingProfile = false;\n      });\n      console.log(error);\n    }\n  };\n\n  @action updateProfile = async (profile: Partial<IProfile>) => {\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (\n          profile.displayName !== this.rootStore.userStore.user!.displayName\n        ) {\n          this.rootStore.userStore.user!.displayName = profile.displayName!;\n        }\n        this.profile = { ...this.profile!, ...profile };\n      });\n    } catch (error) {\n      toast.error(\"Problem updating profile\");\n    }\n  };\n\n  @action uploadPhoto = async (file: Blob) => {\n    this.uploadingPhoto = true;\n    try {\n      const photo = await agent.Profiles.uploadPhoto(file);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos.push(photo);\n          if (photo.isMain && this.rootStore.userStore.user) {\n            this.rootStore.userStore.user.image = photo.url;\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploadingPhoto = false;\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Problem uploading photo\");\n      runInAction(() => {\n        this.uploadingPhoto = false;\n      });\n    }\n  };\n\n  @action setMainPhoto = async (photo: IPhoto) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      runInAction(() => {\n        this.rootStore.userStore.user!.image = photo.url;\n        this.profile!.photos.find((a) => a.isMain)!.isMain = false;\n        this.profile!.photos.find((a) => a.id === photo.id)!.isMain = true;\n        this.profile!.image = photo.url;\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error(\"Problem setting photo as main\");\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action deletePhoto = async (photo: IPhoto) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        this.profile!.photos = this.profile!.photos.filter(\n          (a) => a.id !== photo.id\n        );\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error(\"Problem deleting the photo\");\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action follow = async (username: string) => {\n    this.loading = true;\n    try {\n        await agent.Profiles.follow(username);\n        runInAction(() => {\n            this.profile!.following = true;\n            this.profile!.followersCount++;\n            this.loading = false;\n        })\n    } catch (error) {\n      toast.error(\"Problem following user\");\n      runInAction(() => {\n          this.loading = false;\n      }) \n    }\n  };\n\n  @action unfollow = async (username: string) => {\n    this.loading = true;\n    try {\n        await agent.Profiles.unfollow(username);\n        runInAction(() => {\n            this.profile!.following = false;\n            this.profile!.followersCount--;\n            this.loading = false;\n        })\n    } catch (error) {\n      toast.error(\"Problem unfollowing user\");\n      runInAction(() => {\n          this.loading = false;\n      }) \n    }\n  };\n\n  @action loadFollowings = async (predicate: string) => {\n    this.loading = true;\n    try {\n      const profiles = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n      runInAction(() => {\n        this.followings = profiles;\n        this.loading = false;\n      })\n    } catch (error) {\n      toast.error('Problem loading followings');\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n}\n","import ActivityStore from \"./activityStore\";\nimport UserStore from \"./userStore\";\nimport { createContext } from \"react\";\nimport { configure } from \"mobx\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\n\nconfigure({ enforceActions: 'always' });\n\nexport class RootStore {\n    activityStore: ActivityStore;\n    userStore: UserStore;\n    commonStore: CommonStore;\n    modalStore: ModalStore;\n    profileStore: ProfileStore;\n\n    constructor() {\n        this.activityStore = new ActivityStore(this);\n        this.userStore = new UserStore(this);\n        this.commonStore = new CommonStore(this);\n        this.modalStore = new ModalStore(this);\n        this.profileStore = new ProfileStore(this);\n    }\n\n}\n\nexport const RootStoreContext = createContext(new RootStore());","import React, { useContext } from \"react\";\nimport { Menu, Container, Button, Dropdown, Image } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\n\nconst NavBar: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { user, logout } = rootStore.userStore;\n  return (\n    <Menu fixed=\"top\" inverted>\n      <Container>\n        <Menu.Item header as={NavLink} exact to=\"/\">\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: 10 }} />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createActivity\"\n            positive\n            content=\"Create Activity\"\n          />\n        </Menu.Item>\n        {user && (\n          <Menu.Item position=\"right\">\n            <Image avatar spaced=\"right\" src={user.image || \"/assets/user.png\"} />\n            <Dropdown pointing=\"top left\" text={user.displayName}>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  as={Link}\n                  to={`/profile/${user.username}`}\n                  text=\"My profile\"\n                  icon=\"user\"\n                />\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Menu.Item>\n        )}\n      </Container>\n    </Menu>\n  );\n};\n\nexport default observer(NavBar);\n","import React from \"react\";\nimport { List, Image, Popup } from \"semantic-ui-react\";\nimport { IAttendee } from \"../../../app/models/activity\";\n\ninterface IProps {\n  attendees: IAttendee[];\n}\n\nconst styles = {\n    borderColor: 'orange',\n    borderWidth: 2\n}\n\nexport const ActivityListItemAttendees: React.FC<IProps> = ({ attendees }) => {\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <List.Item key={attendee.username}>\n          <Popup\n            header={attendee.displayName}\n            trigger={\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || \"assets/user.png\"}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            }\n          />\n        </List.Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ActivityListItemAttendees;\n","import React from \"react\";\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAttendees from \"./ActivityListItemAttendees\";\n\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image size=\"tiny\" circular src={host.image || \"/assets/user.png\"} style={{marginBottom: 3}}/>\n            <Item.Content>\n              <Item.Header as={Link} to={`activities/${activity.id}`}>{activity.title}</Item.Header>\n\n              <Item.Description>Hosted by <Link to={`/profile/${host.username}`}> {host.displayName}</Link></Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color=\"orange\"\n                    content=\"You are hosting this activity\"\n                  />\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color=\"green\"\n                    content=\"You are going to this activity\"\n                  />\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <Icon name=\"clock\" /> {format(activity.date, \"h:mm a\")}\n        <Icon name=\"marker\" /> {activity.venue}, {activity.city}\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendees attendees={activity.attendees} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          floated=\"right\"\n          content=\"View\"\n          color=\"blue\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityListItem;\n","import React, { useContext, Fragment } from 'react';\nimport { Item, Label } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport ActivityListItem from './ActivityListItem';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport {format} from 'date-fns';\n\nconst ActivityList: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { activitiesByDate } = rootStore.activityStore;\n  return (\n    <Fragment>\n      {activitiesByDate.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Label size='large' color='blue'>\n            {format(group, 'eeee do MMMM')}\n          </Label>\n          <Item.Group divided>\n            {activities.map(activity => (\n              <ActivityListItem key={activity.id} activity={activity} />\n            ))}\n          </Item.Group>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityList);\n","import React, { Fragment, useContext } from \"react\";\nimport { Menu, Header } from \"semantic-ui-react\";\nimport { Calendar } from \"react-widgets\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\nimport { observer } from \"mobx-react-lite\";\n\nconst ActivityFilters = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { predicate, setPredicate } = rootStore.activityStore;\n\n  return (\n    <Fragment>\n      <Menu vertical size={\"large\"} style={{ width: \"100%\", marginTop: 50 }}>\n        <Header icon={\"filter\"} attached color={\"teal\"} content={\"Filters\"} />\n        <Menu.Item\n          active={predicate.size === 0}\n          onClick={() => setPredicate(\"all\", \"true\")}\n          color={\"blue\"}\n          name={\"all\"}\n          content={\"All Activities\"}\n        />\n        <Menu.Item\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n          color={\"blue\"}\n          name={\"username\"}\n          content={\"I'm Going\"}\n        />\n        <Menu.Item\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n          color={\"blue\"}\n          name={\"host\"}\n          content={\"I'm hosting\"}\n        />\n      </Menu>\n      <Header\n        icon={\"calendar\"}\n        attached\n        color={\"teal\"}\n        content={\"Select Date\"}\n      />\n      <Calendar\n        onChange={(date) => setPredicate(\"startDate\", date!)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityFilters);\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\nconst ActivityListItemPlaceholder = () => {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 50 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color='blue' floated='right' content='View' />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n};\nexport default ActivityListItemPlaceholder;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport ActivityList from \"./ActivityList\";\nimport { observer } from \"mobx-react-lite\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nconst ActivityDashboard: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n\n  const {\n    loadActivities,\n    loadingInitial,\n    setPage,\n    page,\n    totalPages,\n  } = rootStore.activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPage(page + 1);\n    loadActivities().then(() => setLoadingNext(false));\n  };\n\n  useEffect(() => {\n    loadActivities();\n  }, [loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        {loadingInitial && page === 0 ? (\n          <ActivityListItemPlaceholder />\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={!loadingNext && page + 1 < totalPages}\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDashboard);\n","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLInputElement>,\n    FormFieldProps {}\n\nconst TextInput: React.FC<IProps> = ({\n  input,\n  width,\n  type,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} type={type} width={width}>\n      <input {...input} placeholder={placeholder} />\n      {touched && error && (\n        <Label basic color='red'>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport { AxiosResponse } from \"axios\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface IProps {\n  error: AxiosResponse;\n  text?: string;\n}\n\nexport const ErrorMessage: React.FC<IProps> = ({ error, text }) => {\n  return (\n    <Message error>\n      <Message.Header>{error.statusText}</Message.Header>\n      {error.data && Object.keys(error.data.errors).length > 0 && (\n        <Message.List>\n          {Object.values(error.data.errors)\n            .flat()\n            .map((err, i) => (\n              <Message.Item key={i}>{err}</Message.Item>\n            ))}\n        </Message.List>\n      )}\n      {text && <Message.Content content={text} />}\n    </Message>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Button, Header } from \"semantic-ui-react\";\nimport TextInput from \"../../app/common/form/TextInput\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nimport { IUserFormValues } from \"../../app/models/user\";\nimport { FORM_ERROR } from \"final-form\";\nimport { combineValidators, isRequired } from \"revalidate\";\nimport { ErrorMessage } from \"../../app/common/form/ErrorMessage\";\n\nconst validate = combineValidators({\n  email: isRequired(\"email\"),\n  password: isRequired(\"password\")\n});\n\nexport const LoginForm = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { login } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IUserFormValues) =>\n        login(values).catch(error => ({\n          [FORM_ERROR]: error\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header\n            as=\"h2\"\n            content=\"Login to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\n          <Field\n            name=\"password\"\n            component={TextInput}\n            placeholder=\"Passsword\"\n            type=\"password\"\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage\n              error={submitError}\n              text=\"Invalid email or password\"\n            />\n          )}\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color=\"teal\"\n            content=\"Login\"\n            fluid\n          />\n        </Form>\n      )}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Button, Header } from \"semantic-ui-react\";\nimport TextInput from \"../../app/common/form/TextInput\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nimport { IUserFormValues } from \"../../app/models/user\";\nimport { FORM_ERROR } from \"final-form\";\nimport { combineValidators, isRequired } from \"revalidate\";\nimport { ErrorMessage } from \"../../app/common/form/ErrorMessage\";\n\nconst validate = combineValidators({\n  email: isRequired(\"email\"),\n  username: isRequired(\"username\"),\n  displayName: isRequired(\"displayName\"),\n  password: isRequired(\"password\")\n});\n\nexport const RegisterForm = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { register } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IUserFormValues) =>\n        register(values).catch(error => ({\n          [FORM_ERROR]: error\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header\n            as=\"h2\"\n            content=\"Sign up to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <Field name=\"username\" component={TextInput} placeholder=\"Username\" />\n          <Field name=\"displayName\" component={TextInput} placeholder=\"DisplayName\" />\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\n          <Field\n            name=\"password\"\n            component={TextInput}\n            placeholder=\"Passsword\"\n            type=\"password\"\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage\n              error={submitError}\n            />\n          )}\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color=\"teal\"\n            content=\"Register\"\n            fluid\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default RegisterForm;","import React, { useContext, Fragment } from \"react\";\nimport { Container, Segment, Header, Button, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nimport { LoginForm } from \"../user/LoginForm\";\nimport RegisterForm from \"../user/RegisterForm\";\n\nconst HomePage = () => {\n  const token = window.localStorage.getItem('jwt');\n  const rootStore = useContext(RootStoreContext);\n  const { isLoggedIn, user } = rootStore.userStore;\n  const {openModal} = rootStore.modalStore;\n\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {isLoggedIn && user && token ? (\n          <Fragment>\n            <Header\n              as=\"h2\"\n              inverted\n              content={`Welcome back ${user.displayName}`}\n            />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to activities\n            </Button>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button onClick={() => openModal(<LoginForm/>)} size=\"huge\" inverted>\n              Login\n            </Button>\n            <Button onClick={() => openModal(<RegisterForm/>)} size=\"huge\" inverted>\n              Register\n            </Button>\n          </Fragment>\n        )}\n      </Container>\n    </Segment>\n  );\n};\n\nexport default HomePage;\n","export interface IActivitiesEnvelope {\n    activities: IActivity[];\n    activityCount: number;\n}\n\nexport interface IActivity {\n    id: string;\n    title: string;\n    description: string;\n    category: string;\n    date: Date;\n    city: string;\n    venue: string;\n    isGoing: boolean;\n    isHost: boolean;\n    attendees: IAttendee[];\n    comments: IComment[];\n}\n\nexport interface IComment {\n    id: string;\n    createdAt: string;\n    body: string;\n    username: string;\n    displayName: string;\n    image: string;\n}\n\nexport interface IActivityFormValues extends Partial<IActivity> {\n    time?: Date;\n}\n\nexport class ActivityFormValues implements IActivityFormValues {\n    id?: string = undefined;\n    title: string = '';\n    category: string = '';\n    description: string = '';\n    date?: Date = undefined;\n    time?: Date = undefined;\n    city: string = '';\n    venue: string = '';\n\n    constructor(init?: IActivityFormValues) {\n        if (init && init.date) {\n            init.time = init.date;\n        }  \n        Object.assign(this, init);\n    }\n}\n\nexport interface IAttendee {\n    username: string;\n    displayName: string;\n    image: string;\n    isHost: boolean;\n    following?: boolean;\n}","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLTextAreaElement>,\n    FormFieldProps {}\n\nconst TextAreaInput: React.FC<IProps> = ({\n  input,\n  width,\n  rows,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <textarea rows={rows} {...input} placeholder={placeholder} />\n      {touched && error && (\n        <Label basic color='red'>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextAreaInput;\n","import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLSelectElement>,\n    FormFieldProps {}\n\nconst SelectInput: React.FC<IProps> = ({\n    input,\n    width,\n    options,\n    placeholder,\n    meta: { touched, error }\n  }) => {\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n        <Select \n            value={input.value}\n            onChange={(e, data) => input.onChange(data.value)}\n            placeholder={placeholder}\n            options={options}\n        />\n        {touched && error && (\n          <Label basic color='red'>\n            {error}\n          </Label>\n        )}\n      </Form.Field>\n    )\n}\n\nexport default SelectInput\n","import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\nimport {DateTimePicker} from 'react-widgets';\n\ninterface IProps\n  extends FieldRenderProps<Date, HTMLInputElement>,\n    FormFieldProps {}\n\nconst DateInput: React.FC<IProps> = ({\n    input,\n    width,\n    placeholder,\n    date = false,\n    time = false,\n    meta: { touched, error },\n    ...rest\n  }) => {\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n        <DateTimePicker \n            placeholder={placeholder}\n            value={input.value || null}\n            onChange={input.onChange}\n            onBlur={input.onBlur}\n            onKeyDown={(e) => e.preventDefault()}\n            date={date}\n            time={time}\n            {...rest}\n        />\n        {touched && error && (\n          <Label basic color='red'>\n            {error}\n          </Label>\n        )}\n      </Form.Field>\n    )\n}\n\nexport default DateInput\n","export const category = [\n    { key: 'drinks', text: 'Drinks', value: 'drinks' },\n    { key: 'culture', text: 'Culture', value: 'culture' },\n    { key: 'film', text: 'Film', value: 'film' },\n    { key: 'food', text: 'Food', value: 'food' },\n    { key: 'music', text: 'Music', value: 'music' },\n    { key: 'travel', text: 'Travel', value: 'travel' }\n  ];","import React, { useState, useContext, useEffect } from 'react';\nimport { Segment, Form, Button, Grid } from 'semantic-ui-react';\nimport { ActivityFormValues } from '../../../app/models/activity';\nimport { v4 as uuid } from 'uuid';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from 'react-router';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport TextInput from '../../../app/common/form/TextInput';\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\nimport SelectInput from '../../../app/common/form/SelectInput';\nimport DateInput from '../../../app/common/form/DateInput';\nimport { category } from '../../../app/common/options/categoryOptions';\nimport { combineDateAndTime } from '../../../app/common/util/util';\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan\n} from 'revalidate';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\nconst validate = combineValidators({\n  title: isRequired({ message: 'The event title is required' }),\n  category: isRequired('Category'),\n  description: composeValidators(\n    isRequired('Description'),\n    hasLengthGreaterThan(4)({\n      message: 'Description needs to be at least 5 characters'\n    })\n  )(),\n  city: isRequired('City'),\n  venue: isRequired('Venue'),\n  date: isRequired('Date'),\n  time: isRequired('Time')\n});\n\ninterface DetailParams {\n  id: string;\n}\n\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    loadActivity\n  } = rootStore.activityStore;\n\n  const [activity, setActivity] = useState(new ActivityFormValues());\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (match.params.id) {\n      setLoading(true);\n      loadActivity(match.params.id)\n        .then(activity => {\n          setActivity(new ActivityFormValues(activity));\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [loadActivity, match.params.id]);\n\n  const handleFinalFormSubmit = (values: any) => {\n    const dateAndTime = combineDateAndTime(values.date, values.time);\n    const { date, time, ...activity } = values;\n    activity.date = dateAndTime;\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity);\n    } else {\n      editActivity(activity);\n    }\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment clearing>\n          <FinalForm\n            validate={validate}\n            initialValues={activity}\n            onSubmit={handleFinalFormSubmit}\n            render={({ handleSubmit, invalid, pristine }) => (\n              <Form onSubmit={handleSubmit} loading={loading}>\n                <Field\n                  name='title'\n                  placeholder='Title'\n                  value={activity.title}\n                  component={TextInput}\n                />\n                <Field\n                  name='description'\n                  placeholder='Description'\n                  rows={3}\n                  value={activity.description}\n                  component={TextAreaInput}\n                />\n                <Field\n                  component={SelectInput}\n                  options={category}\n                  name='category'\n                  placeholder='Category'\n                  value={activity.category}\n                />\n                <Form.Group widths='equal'>\n                  <Field\n                    component={DateInput}\n                    name='date'\n                    date={true}\n                    placeholder='Date'\n                    value={activity.date}\n                  />\n                  <Field\n                    component={DateInput}\n                    name='time'\n                    time={true}\n                    placeholder='Time'\n                    value={activity.time}\n                  />\n                </Form.Group>\n\n                <Field\n                  component={TextInput}\n                  name='city'\n                  placeholder='City'\n                  value={activity.city}\n                />\n                <Field\n                  component={TextInput}\n                  name='venue'\n                  placeholder='Venue'\n                  value={activity.venue}\n                />\n                <Button\n                  loading={submitting}\n                  disabled={loading || invalid || pristine}\n                  floated='right'\n                  positive\n                  type='submit'\n                  content='Submit'\n                />\n                <Button\n                  onClick={\n                    activity.id\n                      ? () => history.push(`/activities/${activity.id}`)\n                      : () => history.push('/activities')\n                  }\n                  disabled={loading}\n                  floated='right'\n                  type='button'\n                  content='Cancel'\n                />\n              </Form>\n            )}\n          />\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityForm);\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst LoadingComponent: React.FC<{ inverted?: boolean; content?: string }> = ({\n  inverted = true,\n  content\n}) => {\n  return (\n    <Dimmer active inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n};\n\nexport default LoadingComponent;\n","import React, { useContext } from \"react\";\nimport { Segment, Item, Header, Button, Image } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\"\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\"\n};\n\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\n  activity\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { cancelAttendance, attendActivity, loading } = rootStore.activityStore;\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date, \"eeee do MMMM\")}</p>\n                <p>\n                  Hosted by\n                  <Link to={`/profile/${host.username}`}>\n                    <strong> {host.displayName}</strong>\n                  </Link>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <Button\n            as={Link}\n            to={`/manage/${activity.id}`}\n            color=\"orange\"\n            floated=\"right\"\n          >\n            Manage Event\n          </Button>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={cancelAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailedHeader);\n","import React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\n\nconst ActivityDetailedInfo: React.FC<{ activity: IActivity }> = ({\n  activity\n}) => {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>\n              {format(activity.date, \"eeee do MMMM\")} at{\" \"}\n              {format(activity.date!, \"h:mm a\")}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityDetailedInfo;\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Segment, Header, Form, Button, Comment } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Link } from \"react-router-dom\";\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\nimport { observer } from \"mobx-react-lite\";\nimport { formatDistance } from \"date-fns\";\n\nconst ActivityDetailedChat = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createHubConnection,\n    stopHubConnection,\n    addComment,\n    activity\n  } = rootStore.activityStore;\n\n  useEffect(() => {\n    createHubConnection(activity!.id);\n    return () => {\n      stopHubConnection();\n    };\n  }, [createHubConnection, stopHubConnection, activity]);\n\n  return (\n    <Fragment>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached>\n        <Comment.Group>\n          {activity &&\n            activity.comments &&\n            activity.comments.map(comment => (\n              <Comment key={comment.id}>\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n                <Comment.Content>\n                  <Comment.Author as={Link} to={`/profile/${comment.username}`}>\n                    {comment.displayName}\n                  </Comment.Author>\n                  <Comment.Metadata>\n                    <div>{formatDistance(comment.createdAt, new Date())}</div>\n                  </Comment.Metadata>\n                  <Comment.Text>{comment.body}</Comment.Text>\n                </Comment.Content>\n              </Comment>\n            ))}\n\n          <FinalForm\n            onSubmit={addComment}\n            render={({ handleSubmit, submitting, form }) => (\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\n                <Field\n                  name='body'\n                  component={TextAreaInput}\n                  rows={2}\n                  placeholder='Add your comment'\n                />\n                <Button\n                  content=\"Add Reply\"\n                  labelPosition=\"left\"\n                  icon=\"edit\"\n                  primary\n                  loading={submitting}\n                />\n              </Form>\n            )}\n          />\n        </Comment.Group>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityDetailedChat);\n","import React, { Fragment } from \"react\";\nimport { Segment, List, Item, Label, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { IAttendee } from \"../../../app/models/activity\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface IProps {\n  attendees: IAttendee[]\n}\n\nconst ActivityDetailedSidebar:React.FC<IProps> = ({attendees}) => {\n  return (\n    <Fragment>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item key={attendee.username} style={{ position: \"relative\" }}>\n            { attendee.isHost && \n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n            }\n            <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n            <Item.Content verticalAlign=\"middle\">\n              <Item.Header as=\"h3\">\n                <Link to={`/profile/${attendee.username}`}>{attendee.displayName}</Link>\n              </Item.Header>\n              {attendee.following && \n              <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n              }\n            </Item.Content>\n          </Item>\n          ))}\n        </List>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityDetailedSidebar);\n","import React, { useContext, useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { RouteComponentProps } from \"react-router\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\n\ninterface DetailParams {\n  id: string;\n}\n\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { activity, loadActivity, loadingInitial } = rootStore.activityStore;\n\n  useEffect(() => {\n    loadActivity(match.params.id);\n  }, [loadActivity, match.params.id, history]);\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  if (!activity) return <h2>Activity not found</h2>;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar attendees={activity.attendees}/>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDetails);\n","import React from 'react';\nimport { Segment, Button, Header, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere but couldn't find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities' primary>\n                    Return to Activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    );\n};\n\nexport default NotFound;","import React, { useContext } from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const ModalContainer = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {modal: {open, body}, closeModal} = rootStore.modalStore;\n\n  return (\n    <Modal open={open} onClose={closeModal} size='mini'>\n      <Modal.Content>{body}</Modal.Content>\n    </Modal>\n  );\n};\n\n\nexport default observer(ModalContainer);","import React from \"react\";\nimport {\n  Segment,\n  Item,\n  Header,\n  Button,\n  Grid,\n  Statistic,\n  Divider,\n  Reveal,\n} from \"semantic-ui-react\";\nimport { IProfile } from \"../../app/models/profile\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface IProps {\n  profile: IProfile;\n  isCurrentUser: boolean;\n  loading: boolean;\n  follow: (username: string) => void;\n  unfollow: (username: string) => void;\n}\n\nconst ProfileHeader: React.FC<IProps> = ({\n  profile,\n  isCurrentUser,\n  loading,\n  follow,\n  unfollow,\n}) => {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\">{profile.displayName}</Header>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          {!isCurrentUser && (\n            <Reveal animated=\"move\">\n              <Reveal.Content visible style={{ width: \"100%\" }}>\n                <Button\n                  fluid\n                  color=\"teal\"\n                  content={profile.following ? \"Following\" : \"Not following\"}\n                />\n              </Reveal.Content>\n              <Reveal.Content hidden>\n                <Button\n                  loading={loading}\n                  fluid\n                  basic\n                  color={profile.following ? \"red\" : \"green\"}\n                  content={profile.following ? \"Unfollow\" : \"Follow\"}\n                  onClick={\n                    profile.following\n                      ? () => unfollow(profile.username)\n                      : () => follow(profile.username)\n                  }\n                />\n              </Reveal.Content>\n            </Reveal>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default observer(ProfileHeader);\n","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Icon, Header } from 'semantic-ui-react'\n\ninterface IProps {\n    setFiles: (files: object[]) => void;\n}\n\nconst dropzoneStyles = {\n  border: 'dashed 3px',\n  borderColor: '#eee',\n  borderRadius: '5px',\n  paddingTop: '30px',\n  textAlign: 'center' as 'center',\n  height: '200px'\n}\n\nconst dropzoneActive = {\n  borderColor: 'green'\n}\n\nconst PhotoWidgetDropzone:React.FC<IProps> = ({setFiles}) => {\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map((file: object) => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dropzoneStyles, ...dropzoneActive} : dropzoneStyles}>\n      <input {...getInputProps()} />\n        <Icon name='upload' size='huge'/>\n        <Header content='Drop Image Here'/>\n    </div>\n  )\n}\n\nexport default PhotoWidgetDropzone;","import React, { useRef } from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface IProps {\n  setImage: (file: Blob) => void;\n  imagePreview: string;\n}\n\nconst PhotoWidgetCropper: React.FC<IProps> = ({ setImage, imagePreview }) => {\n  const cropper = useRef<Cropper>(null);\n\n  const cropImage = () => {\n    if (\n      cropper.current &&\n      typeof cropper.current.getCroppedCanvas() === \"undefined\"\n    ) {\n      return;\n    }\n    cropper &&\n      cropper.current &&\n      cropper.current.getCroppedCanvas().toBlob((blob: any) => {\n        setImage(blob);\n      }, \"image/jpg\");\n  };\n  return (\n    <Cropper\n      ref={cropper}\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      // Cropper.js options\n      aspectRatio={1 / 1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      dragMode=\"move\"\n      scalable={true}\n      cropBoxMovable={true}\n      cropBoxResizable={true}\n      crop={cropImage}\n    />\n  );\n};\n\nexport default PhotoWidgetCropper;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Header, Grid, Button } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\nimport PhotoWIdgetCropper from \"./PhotoWidgetCropper\";\n\ninterface IProps {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nconst PhotoUploadWidget: React.FC<IProps> = ({loading, uploadPhoto}) => {\n  const [files, setFiles] = useState<any[]>([]);\n  const [image, setImage] = useState<Blob | null>(null)\n\n  useEffect(() => {\n    return () => {\n      files.forEach(file => URL.revokeObjectURL(file.preview))\n    }\n  })\n\n  return (\n    <Fragment>\n      <Grid>\n        <Grid.Column width={4}>\n          <Header color=\"teal\" sub content=\"Step 1 - Add Photo\" />\n          <PhotoWidgetDropzone setFiles={setFiles} />\n        </Grid.Column>\n        <Grid.Column width={1} />\n        <Grid.Column width={4}>\n          <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\n          {files.length > 0 &&\n          <PhotoWIdgetCropper setImage={setImage} imagePreview={files[0].preview}/>\n          }\n        </Grid.Column>\n        <Grid.Column width={1} />\n        <Grid.Column width={4}>\n          <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\n          {files.length > 0 && \n            <Fragment>\n              <div className='img-preview' style={{minHeight: '200px', overflow:'hidden'}}/>\n              <Button.Group widths={2}>\n                <Button positive icon='check' loading={loading} onClick={() => uploadPhoto(image!)} />\n                <Button icon='close' disabled={loading} onClick={() => setFiles([])} />\n              </Button.Group>\n            </Fragment>\n          }\n        </Grid.Column>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default observer(PhotoUploadWidget);","import React, { useContext, useState } from \"react\";\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nimport PhotoUploadWidget from \"../../app/common/photoUpload/PhotoUploadWidget\";\nimport { observer } from \"mobx-react-lite\";\n\nconst ProfilePhotos = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    isCurrentUser,\n    uploadPhoto,\n    uploadingPhoto,\n    setMainPhoto,\n    deletePhoto,\n    loading\n  } = rootStore.profileStore;\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState<string | undefined>(undefined);\n  const [deleteTarget, setDeleteTarget] = useState<string | undefined>(\n    undefined\n  );\n\n  const handleUploadImage = (photo: Blob) => {\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\n  };\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16} style={{ paddingBottom: 0 }}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handleUploadImage}\n              loading={uploadingPhoto}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile &&\n                profile.photos.map(photo => (\n                  <Card key={photo.id}>\n                    <Image src={photo.url} />\n                    {isCurrentUser && (\n                      <Button.Group fluid widths={2}>\n                        <Button\n                          name={photo.id}\n                          onClick={e => {\n                            setMainPhoto(photo);\n                            setTarget(e.currentTarget.name);\n                          }}\n                          disabled={photo.isMain}\n                          loading={loading && target === photo.id}\n                          basic\n                          positive\n                          content=\"Main\"\n                        ></Button>\n                        <Button\n                          name={photo.id}\n                          disabled={photo.isMain}\n                          onClick={(e) => {\n                            deletePhoto(photo);\n                            setDeleteTarget(e.currentTarget.name);\n                          }}\n                          loading={loading && deleteTarget === photo.id}\n                          basic\n                          negative\n                          icon=\"trash\"\n                        ></Button>\n                      </Button.Group>\n                    )}\n                  </Card>\n                ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfilePhotos);\n","import React from 'react';\nimport { IProfile } from '../../app/models/profile';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { observer } from 'mobx-react-lite';\nimport { combineValidators, isRequired } from 'revalidate';\nimport { Form, Button } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport TextAreaInput from '../../app/common/form/TextAreaInput';\n\nconst validate = combineValidators({\n  displayName: isRequired('displayName')\n});\n\ninterface IProps {\n  updateProfile: (profile: Partial<IProfile>) => void;\n  profile: IProfile;\n}\n\nconst ProfileEditForm: React.FC<IProps> = ({ updateProfile, profile }) => {\n  return (\n    <FinalForm\n      onSubmit={updateProfile}\n      validate={validate}\n      initialValues={profile!}\n      render={({ handleSubmit, invalid, pristine, submitting }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Field\n            name='displayName'\n            component={TextInput}\n            placeholder='Display Name'\n            value={profile!.displayName}\n          />\n          <Field\n            name='biography'\n            component={TextAreaInput}\n            rows={3}\n            placeholder='Biography'\n            value={profile!.biography}\n          />\n          <Button \n            loading={submitting}\n            floated='right'\n            disabled={invalid || pristine}\n            positive\n            content='Update profile'\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default observer(ProfileEditForm);","import React, { useContext, useState } from 'react';\nimport { Tab, Grid, Header, Button } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileEditForm from './ProfileEditForm';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfileDescription = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { updateProfile, profile, isCurrentUser } = rootStore.profileStore;\n  const [editMode, setEditMode] = useState(false);\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={`About ${profile!.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated='right'\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {editMode ? (\n            <ProfileEditForm updateProfile={updateProfile} profile={profile!} />\n          ) : (\n            <span>{profile!.biography}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfileDescription);","import React from 'react';\nimport { Card, Image, Icon} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IProfile } from '../../app/models/profile';\n\ninterface IProps {\n    profile: IProfile\n}\n\nconst ProfileCard: React.FC<IProps> = ({profile}) => {\n  return (\n    <Card as={Link} to={`/profile/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n        <div>\n          <Icon name='user' />\n          {profile.followersCount} Followers\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ProfileCard;\n","import React, { useContext } from \"react\";\nimport { Tab, Grid, Header, Card } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nimport ProfileCard from \"./ProfileCard\";\n\nconst ProfileFollowings = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    followings,\n    loading,\n    activeTab\n  } = rootStore.profileStore;\n\n  return (\n    <Tab.Pane loading={loading}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile!.displayName}`\n                : `People ${profile!.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={5}>\n              {followings.map((profile) => (\n                <ProfileCard key={profile.username} profile={profile} />      \n              ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default ProfileFollowings;\n","import React, { useEffect, useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IUserActivity } from '../../app/models/profile';\nimport { format } from 'date-fns';\nimport { RootStoreContext } from '../../app/stores/rootStore';\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },\n  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },\n  { menuItem: 'Hosting', pane: { key: 'hosted' } }\n];\n\nconst ProfileEvents = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadUserActivities,\n    profile,\n    loadingActivities,\n    userActivities\n  } = rootStore.profileStore!;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    data: TabProps\n  ) => {\n    let predicate;\n    switch (data.activeIndex) {\n      case 1:\n        predicate = 'past';\n        break;\n      case 2:\n        predicate = 'hosting';\n        break;\n      default:\n        predicate = 'future';\n        break;\n    }\n    loadUserActivities(profile!.username, predicate);\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content={'Activities'} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: IUserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: 'cover' }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                  <Card.Meta textAlign='center'>\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfileEvents);\n","import React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport ProfilePhotos from \"./ProfilePhotos\";\nimport ProfileDescription from \"./ProfileDescription\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfileActivities from \"./ProfileActivities\";\n\ninterface IProps {\n  setActiveTab: (activeIndex: any) => void;\n}\n\nconst panes = [\n  { menuItem: \"About\", render: () => <ProfileDescription /> },\n  { menuItem: \"Photos\", render: () => <ProfilePhotos /> },\n  {\n    menuItem: \"Activities\",\n    render: () => <ProfileActivities />,\n  },\n  { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\n  { menuItem: \"Following\", render: () => <ProfileFollowings /> },\n];\n\nconst ProfileContent: React.FC<IProps> = ({ setActiveTab }) => {\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => setActiveTab(data.activeIndex)}\n    />\n  );\n};\n\nexport default ProfileContent;\n","import React, { useContext, useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileContent from \"./ProfileContent\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface RouteParams {\n  username: string;\n}\n\ninterface IProps extends RouteComponentProps<RouteParams> {}\n\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadingProfile,\n    profile,\n    loadProfile,\n    follow,\n    unfollow,\n    isCurrentUser,\n    loading,\n    setActiveTab\n  } = rootStore.profileStore;\n\n  useEffect(() => {\n    loadProfile(match.params.username);\n  }, [loadProfile, match]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        <ProfileHeader\n          profile={profile!}\n          isCurrentUser={isCurrentUser}\n          loading={loading}\n          follow={follow}\n          unfollow={unfollow}\n          \n        />\n        <ProfileContent setActiveTab={setActiveTab}/>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ProfilePage);\n","import React, { useContext } from 'react'\nimport { RouteProps, RouteComponentProps, Route, Redirect } from 'react-router-dom'\nimport { RootStoreContext } from '../stores/rootStore'\nimport { observer } from 'mobx-react-lite';\n\ninterface IProps extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>>\n}\n\nexport const PrivateRoute: React.FC<IProps> = ({component: Component, ...rest}) => {\n    const rootStore = useContext(RootStoreContext);\n    const { isLoggedIn } = rootStore.userStore;\n    return (\n        <Route\n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to={'/'}/>}\n        />\n    )\n}\n\nexport default observer(PrivateRoute);\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Route,\n  withRouter,\n  RouteComponentProps,\n  Switch\n} from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport NotFound from \"./NotFound\";\nimport { ToastContainer } from \"react-toastify\";\nimport { RootStoreContext } from \"../stores/rootStore\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\n  const {getUser} = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded())\n    } else {\n      setAppLoaded()\n    }\n  }, [getUser, setAppLoaded, token])\n\n  if (!appLoaded) return <LoadingComponent content='Loading app...'/>\n\n  return (\n    <Fragment>\n      <ModalContainer />\n      <ToastContainer position=\"bottom-right\" />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute path='/profile/:username' component={ProfilePage} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nconst ScrollToTop = ({ children, location: { pathname } }: any) => {\n    useEffect(() => {\n      window.scrollTo(0, 0);\n    }, [pathname]);\n  \n    return children || null;\n  };\n  \n  export default withRouter(ScrollToTop);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport ScrollToTop from './app/layout/ScrollToTop';\nimport dateFnsLocalizer from 'react-widgets-date-fns';\n\ndateFnsLocalizer();\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop>\n      <App />\n    </ScrollToTop>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}